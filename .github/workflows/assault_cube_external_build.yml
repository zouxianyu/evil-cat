name: assault_cube_external_build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # game name
  GAME_NAME: assault_cube

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    strategy:
      matrix:
        arch:
          - x86
          - amd64

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    
    - name: Configure build environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DGAME_NAME=${{env.GAME_NAME}}
        -G "Ninja"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.GAME_NAME}}-${{matrix.arch}}
        path: ${{github.workspace}}/build/${{env.GAME_NAME}}_cheat.exe
        if-no-files-found: error
